/**
 * Study-Test.Online - сервис проведения тестирования
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAnswer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAnswer::OAIAnswer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAnswer::OAIAnswer() {
    this->initializeModel();
}

OAIAnswer::~OAIAnswer() {}

void OAIAnswer::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_body_isSet = false;
    m_body_isValid = false;
}

void OAIAnswer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAnswer::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_body_isValid = ::OpenAPI::fromJsonValue(body, json[QString("body")]);
    m_body_isSet = !json[QString("body")].isNull() && m_body_isValid;
}

QString OAIAnswer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAnswer::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(id));
    }
    if (m_body_isSet) {
        obj.insert(QString("body"), ::OpenAPI::toJsonValue(body));
    }
    return obj;
}

QString OAIAnswer::getId() const {
    return id;
}
void OAIAnswer::setId(const QString &id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool OAIAnswer::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAnswer::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIAnswer::getBody() const {
    return body;
}
void OAIAnswer::setBody(const QString &body) {
    this->body = body;
    this->m_body_isSet = true;
}

bool OAIAnswer::is_body_Set() const{
    return m_body_isSet;
}

bool OAIAnswer::is_body_Valid() const{
    return m_body_isValid;
}

bool OAIAnswer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAnswer::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
