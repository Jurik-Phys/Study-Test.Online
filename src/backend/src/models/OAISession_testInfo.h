/**
 * Study-Test.Online - сервис проведения тестирования
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISession_testInfo.h
 *
 * 
 */

#ifndef OAISession_testInfo_H
#define OAISession_testInfo_H

#include <QJsonObject>

#include "OAISession_testInfo_doneQuestionsArray_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISession_testInfo : public OAIObject {
public:
    OAISession_testInfo();
    OAISession_testInfo(QString json);
    ~OAISession_testInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getTotalQuestion() const;
    void setTotalQuestion(const double &total_question);
    bool is_total_question_Set() const;
    bool is_total_question_Valid() const;

    QString getTestType() const;
    void setTestType(const QString &test_type);
    bool is_test_type_Set() const;
    bool is_test_type_Valid() const;

    QString getSection() const;
    void setSection(const QString &section);
    bool is_section_Set() const;
    bool is_section_Valid() const;

    QString getSubsection() const;
    void setSubsection(const QString &subsection);
    bool is_subsection_Set() const;
    bool is_subsection_Valid() const;

    QString getTestAnnotation() const;
    void setTestAnnotation(const QString &test_annotation);
    bool is_test_annotation_Set() const;
    bool is_test_annotation_Valid() const;

    double getDoneQuestions() const;
    void setDoneQuestions(const double &done_questions);
    bool is_done_questions_Set() const;
    bool is_done_questions_Valid() const;

    QList<OAISession_testInfo_doneQuestionsArray_inner> getDoneQuestionsArray() const;
    void setDoneQuestionsArray(const QList<OAISession_testInfo_doneQuestionsArray_inner> &done_questions_array);
    bool is_done_questions_array_Set() const;
    bool is_done_questions_array_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double total_question;
    bool m_total_question_isSet;
    bool m_total_question_isValid;

    QString test_type;
    bool m_test_type_isSet;
    bool m_test_type_isValid;

    QString section;
    bool m_section_isSet;
    bool m_section_isValid;

    QString subsection;
    bool m_subsection_isSet;
    bool m_subsection_isValid;

    QString test_annotation;
    bool m_test_annotation_isSet;
    bool m_test_annotation_isValid;

    double done_questions;
    bool m_done_questions_isSet;
    bool m_done_questions_isValid;

    QList<OAISession_testInfo_doneQuestionsArray_inner> done_questions_array;
    bool m_done_questions_array_isSet;
    bool m_done_questions_array_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISession_testInfo)

#endif // OAISession_testInfo_H
